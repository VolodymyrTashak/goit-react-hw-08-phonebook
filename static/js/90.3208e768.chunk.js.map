{"version":3,"file":"static/js/90.3208e768.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/Contact/ContactForm/ContactForm.styled.jsx","components/Contact/ContactForm/ContactForm.jsx","components/Contact/ContactList/ContactList.styled.jsx","components/Contact/ContactList/ContactList.jsx","components/Contact/Filter/Filter.styled.jsx","components/Contact/Filter/Filter.jsx","components/Spiner/Spiner.styled.jsx","components/Spiner/Spiner.jsx","pages/Contacts/Contacts.jsx","pages/Home/Home.styled.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContact = state => state.contacts.items;\n\nexport const getFilter = state => state.filter;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getFilteredContact = createSelector(\n  [getContact, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    const filteredContact = contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n    return filteredContact;\n  }\n);\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  margin-top: 50px;\n  margin: 50px auto 0;\n  max-width: 400px;\n  padding: 60px 50px;\n  background-color: #565678;\n  border-radius: 20px;\n  :before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: linear-gradient(\n      to right bottom,\n      rgba(43, 44, 78, 0.5),\n      rgba(104, 22, 96, 0.5)\n    );\n    border-radius: 20px;\n  }\n`;\n\nexport const FormBox = styled.div`\n  position: relative;\n  justify-content: center;\n  text-align: center;\n`;\n\nexport const FormLabel = styled.label`\n  display: block;\n  padding-left: 15px;\n  font-size: 14px;\n  color: rgba(255, 255, 255, 0.6);\n  text-transform: uppercase;\n`;\n\nexport const FormText = styled.p`\n  font-size: 22px;\n  margin-right: 14px;\n  font-weight: 500;\n`;\n\nexport const FormInput = styled.input`\n  display: block;\n  width: 100%;\n  margin: 10px 0 15px;\n  padding: 0 15px;\n  border-width: 0;\n  border-radius: 20px;\n  color: white;\n  background: rgba(255, 255, 255, 0.2);\n  line-height: 40px;\n  :focus {\n    border: none;\n    outline: 2px solid #b758b7;\n  }\n`;\n\nexport const FormBtn = styled.button`\n  display: inline-block;\n  margin: 0 auto;\n  padding: 15px 30px;\n  border: #565678;\n  border-radius: 10px;\n  box-shadow: 0 0 40px 40px #565678 inset, 0 0 0 0 #565678;\n  font-weight: bold;\n  color: white;\n  transition: 0.15s ease-in-out;\n  text-decoration: none;\n  letter-spacing: 2px;\n  :hover {\n    color: #565678;\n    box-shadow: 0 0 10px 0 #565678 inset, 0 0 10px 4px #565678;\n  }\n  :focus {\n    color: #565678;\n    box-shadow: 0 0 10px 0 #565678 inset, 0 0 10px 4px #565678;\n  }\n  &.active {\n    color: #565678;\n    box-shadow: 0 0 10px 0 #565678 inset, 0 0 10px 4px #565678;\n  }\n`;\n","import { useDispatch } from 'react-redux';\n\nimport { addContact } from 'redux/contacts/operations';\n\nimport {\n  Form,\n  FormBox,\n  FormLabel,\n  FormText,\n  FormInput,\n  FormBtn,\n} from './ContactForm.styled';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    const name = e.target.elements.name.value;\n    const number = e.target.elements.number.value;\n\n    dispatch(addContact({ name, number }));\n    form.reset();\n  };\n\n  return (\n    <Form onSubmit={onFormSubmit}>\n      <FormBox>\n        <FormLabel>\n          <FormText>Name</FormText>\n          <FormInput\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </FormLabel>\n\n        <FormLabel>\n          <FormText>Number</FormText>\n          <FormInput\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </FormLabel>\n\n        <FormBtn type=\"submit\">Add contact</FormBtn>\n      </FormBox>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactLists = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  margin-top: 50px;\n  margin-right: 300px;\n  list-style-type: none;\n \n  }\n`;\n\nexport const ContactItem = styled.li`\n  display: flex;\n  align-items: center;\n  margin-bottom: 20px;\n  font-size: 20px;\n  font-weight: 500;\n`;\n\nexport const ContactInfo = styled.span`\n  margin: 0px 20px;\n  color: #565678;\n`;\n\nexport const ContactBtn = styled.button`\n  display: inline-block;\n  text-decoration: none;\n  font-weight: bold;\n  margin: 0 auto;\n  padding: 15px 30px;\n  color: white;\n  border: #565678;\n  border-radius: 10px;\n  box-shadow: 0 0 40px 40px #565678 inset, 0 0 0 0 #565678;\n  letter-spacing: 2px;\n  transition: 0.15s ease-in-out;\n  :hover {\n    color: #565678;\n    box-shadow: 0 0 10px 0 #565678 inset, 0 0 10px 4px #565678;\n  }\n  :focus {\n    color: #565678;\n    box-shadow: 0 0 10px 0 #565678 inset, 0 0 10px 4px #565678;\n  }\n  &.active {\n    color: #565678;\n    box-shadow: 0 0 10px 0 #565678 inset, 0 0 10px 4px #565678;\n  }\n`;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { deleteContact, fetchContacts } from 'redux/contacts/operations';\nimport { getContact, getFilteredContact } from 'redux/contacts/selectors';\n\nimport {\n  ContactLists,\n  ContactItem,\n  ContactBtn,\n  ContactInfo,\n} from './ContactList.styled';\n\nexport const ContactList = () => {\n  const { isLoading, error } = useSelector(getContact);\n  const dispatch = useDispatch();\n\n  const formatting = useSelector(getFilteredContact);\n\n  const onClick = id => {\n    dispatch(deleteContact(id));\n  };\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ContactLists>\n      {isLoading && <p>Loading</p>}\n      {error && <p>{error}</p>}\n      {formatting.map(({ id, name, number }) => (\n        <ContactItem key={id}>\n          <ContactInfo>{name}</ContactInfo>\n          <ContactInfo>{number}</ContactInfo>\n          <ContactBtn\n            type=\"button\"\n            onClick={() => {\n              onClick(id);\n            }}\n          >\n            Delete\n          </ContactBtn>\n        </ContactItem>\n      ))}\n    </ContactLists>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterBox = styled.div`\n  display: block;\n  justify-content: center;\n  margin-top: 50px;\n  text-align: center;\n`;\n\nexport const FilterLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding-left: 15px;\n  color: #565678;\n  font-size: 24px;\n  text-transform: uppercase;\n`;\n\nexport const FilterInput = styled.input`\n  display: block;\n  width: 50%;\n  margin: 10px 0 15px;\n  padding: 0 15px;\n  border-radius: 20px;\n  border: 3px solid #565678;\n  outline: none;\n  line-height: 40px;\n  :focus {\n    border: none;\n    outline: 3px solid #b758b7;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { getFilter } from 'redux/contacts/selectors';\nimport { filterContact } from 'redux/contacts/slices/filterSlice';\n\nimport { FilterBox, FilterLabel, FilterInput } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  const onFilter = e => {\n    dispatch(filterContact(e.currentTarget.value));\n  };\n\n  return (\n    <FilterBox>\n      <FilterLabel>\n        Find contacts by name\n        <FilterInput\n          type=\"text\"\n          name=\"filter\"\n          value={filter}\n          onChange={onFilter}\n        />\n      </FilterLabel>\n    </FilterBox>\n  );\n};\n","import styled from 'styled-components';\n\nexport const SpinerBox = styled.div`\n  width: 80px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import { ProgressBar } from 'react-loader-spinner';\n\nimport { SpinerBox } from './Spiner.styled';\n\nexport const Spiner = () => {\n  return (\n    <SpinerBox>\n      <ProgressBar\n        height=\"80\"\n        width=\"80\"\n        ariaLabel=\"progress-bar-loading\"\n        wrapperClass=\"progress-bar-wrapper\"\n        borderColor=\"#b758b7\"\n        barColor=\"#565678\"\n      />\n    </SpinerBox>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { getIsLoading, getError } from 'redux/contacts/selectors';\nimport { ContactForm } from 'components/Contact/ContactForm/ContactForm';\nimport { ContactList } from 'components/Contact/ContactList/ContactList';\nimport { Filter } from 'components/Contact/Filter/Filter';\nimport { Spiner } from 'components/Spiner/Spiner';\n\nimport { Text } from 'pages/Home/Home.styled';\n\nexport const Contacts = () => {\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n  return (\n    <div>\n      <Text>Phonebook</Text>\n      <ContactForm />\n      <Text>Contacts</Text>\n      <Filter />\n      {isLoading && !error && <Spiner />}\n      <ContactList />\n    </div>\n  );\n};\n\nexport default Contacts;\n","import styled from 'styled-components';\n\nexport const Text = styled.h1`\n  position: relative;\n  margin-top: 30px;\n  padding-bottom: 0.5rem;\n  text-align: center;\n  color: #565678;\n  font-size: 1.5rem;\n  text-transform: uppercase;\n  ::before {\n    content: '';\n    position: absolute;\n    bottom: 0.25rem;\n    left: 50%;\n    width: 30%;\n    border-bottom: 2px solid #565678;\n    transform: translateX(-50%);\n  }\n  ::after {\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 50%;\n    width: 15%;\n    border-bottom: 2px solid #565678;\n    transform: translateX(-50%);\n  }\n`;\n"],"names":["getContact","state","contacts","items","getFilter","filter","getIsLoading","isLoading","getError","error","getFilteredContact","createSelector","normalizedFilter","toLowerCase","name","includes","Form","styled","FormBox","FormLabel","FormText","FormInput","FormBtn","ContactForm","dispatch","useDispatch","onSubmit","e","preventDefault","form","target","elements","value","number","addContact","reset","type","pattern","title","required","ContactLists","ContactItem","ContactInfo","ContactBtn","ContactList","useSelector","formatting","useEffect","fetchContacts","map","id","onClick","deleteContact","FilterBox","FilterLabel","FilterInput","Filter","onChange","filterContact","currentTarget","SpinerBox","Spiner","height","width","ariaLabel","wrapperClass","borderColor","barColor","Contacts","Text"],"sourceRoot":""}