{"version":3,"file":"static/js/759.3c43bb0d.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/Contact/ContactForm/ContactForm.styled.jsx","components/Contact/ContactForm/ContactForm.jsx","components/Contact/ContactList/ContactList.styled.jsx","components/Contact/ContactList/ContactList.jsx","components/Contact/Filter/Filter.styled.jsx","components/Contact/Filter/Filter.jsx","components/Spiner/Spiner.jsx","components/Box/Box.styled.jsx","components/App/App.styled.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContact = state => state.contacts.items;\n\nexport const getFilter = state => state.filter;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getFilteredContact = createSelector(\n  [getContact, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    const filteredContact = contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n    return filteredContact;\n  }\n);\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: grid;\n  gap: 12px;\n`;\n\nexport const FormLabel = styled.label`\n  display: grid;\n  margin-right: auto;\n  margin-left: auto;\n  width: 200px;\n  font-size: 20px;\n  line-height: 1.2;\n  font-weight: 700;\n  color: #dbd5d5;\n`;\n\nexport const FormBtn = styled.button`\n  font-size: 18px;\n  margin-right: auto;\n  margin-left: auto;\n  border: none;\n  background-color: #e7c587;\n  border-radius: 5px;\n  height: 40px;\n  width: 140px;\n  cursor: pointer;\n  :hover {\n    background-color: #a06e49ba;\n    color: #dbd5d5;\n    transform: scale(1.2);\n    transition: 500ms;\n  }\n`;\n","import { useDispatch } from 'react-redux';\n\nimport { addContact } from 'redux/contacts/operations';\n\nimport { FormLabel, FormBtn, Form } from './ContactForm.styled';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    const name = e.target.elements.name.value;\n    const number = e.target.elements.number.value;\n\n    dispatch(addContact({ name, number }));\n    form.reset();\n  };\n\n  return (\n    <Form onSubmit={onFormSubmit}>\n      <FormLabel>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </FormLabel>\n\n      <FormLabel>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </FormLabel>\n\n      <FormBtn type=\"submit\">Add contact</FormBtn>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactItem = styled.li`\n  list-style: none;\n  :not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const ContactInfo = styled.span`\n  font-size: 20px;\n  line-height: 1.2;\n  font-weight: 700;\n  color: #dbd5d5;\n  :not(:last-child) {\n    margin-right: 10px;\n  }\n`;\n\nexport const ContactBtn = styled.button`\n  font-size: 18px;\n  margin-left: 15px;\n  border: none;\n  background-color: #e7c587;\n  border-radius: 20px;\n  height: 40px;\n  width: 70px;\n  cursor: pointer;\n  :hover {\n    background-color: #a06e49ba;\n    color: #dbd5d5;\n    transform: scale(1.2);\n    transition: 500ms;\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\n\nimport { deleteContact } from 'redux/contacts/operations';\nimport { getContact, getFilteredContact } from 'redux/contacts/selectors';\n\nimport { ContactItem, ContactBtn, ContactInfo } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const { isLoading, error } = useSelector(getContact);\n  const dispatch = useDispatch();\n\n  const formatting = useSelector(getFilteredContact);\n\n  return (\n    <ul>\n      {isLoading && <p>Loading</p>}\n      {error && <p>{error}</p>}\n      {formatting.map(({ id, name, number }) => (\n        <ContactItem key={id}>\n          <ContactInfo>{name}</ContactInfo>\n          <ContactInfo>{number}</ContactInfo>\n          <ContactBtn type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n            Delete\n          </ContactBtn>\n        </ContactItem>\n      ))}\n    </ul>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterLabel = styled.label`\n  display: grid;\n  margin-right: auto;\n  margin-left: auto;\n  width: 200px;\n  font-size: 20px;\n  line-height: 1.2;\n  font-weight: 700;\n  color: #dbd5d5;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { getFilter } from 'redux/contacts/selectors';\nimport { filterContact } from 'redux/contacts/slices/filterSlice';\n\nimport { FilterLabel } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  const onFilter = e => {\n    dispatch(filterContact(e.currentTarget.value));\n  };\n\n  return (\n    <FilterLabel>\n      Find contacts by name\n      <input type=\"text\" name=\"filter\" value={filter} onChange={onFilter} />\n    </FilterLabel>\n  );\n};\n","import { ProgressBar } from 'react-loader-spinner';\n\nexport const Spiner = () => {\n  return (\n    <ProgressBar\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"progress-bar-loading\"\n      wrapperClass=\"progress-bar-wrapper\"\n      borderColor=\"#dbd5d5\"\n      barColor=\"#e7c587\"\n    />\n  );\n};\n","import styled from 'styled-components';\n\nexport const Box = styled.div`\n  text-align: center;\n  padding-left: 300px;\n  padding-right: 300px;\n  padding-bottom: 50px;\n  padding-top: 50px;\n`;\nexport default Box;\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  font-size: 24px;\n  line-height: 1.2;\n  font-weight: 700;\n  color: #dbd5d5;\n`;\n\nexport const Text = styled.h2`\n  font-size: 24px;\n  line-height: 1.2;\n  font-weight: 700;\n  color: #dbd5d5;\n`;\n","import { useSelector } from 'react-redux';\nimport { getIsLoading, getError } from 'redux/contacts/selectors';\nimport { ContactForm } from 'components/Contact/ContactForm/ContactForm';\nimport { ContactList } from 'components/Contact/ContactList/ContactList';\nimport { Filter } from 'components/Contact/Filter/Filter';\nimport { Spiner } from 'components/Spiner/Spiner';\n\nimport { Box } from 'components/Box/Box.styled';\nimport { Title, Text } from 'components/App/App.styled';\n\nexport const Contacts = () => {\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n  return (\n    <Box>\n      <Title>Phonebook</Title>\n      <ContactForm />\n      <Text>Contacts</Text>\n      <Filter />\n      {isLoading && !error && <Spiner />}\n      <ContactList />\n    </Box>\n  );\n};\n\nexport default Contacts;\n"],"names":["getContact","state","contacts","items","getFilter","filter","getIsLoading","isLoading","getError","error","getFilteredContact","createSelector","normalizedFilter","toLowerCase","name","includes","Form","styled","FormLabel","FormBtn","ContactForm","dispatch","useDispatch","onSubmit","e","preventDefault","form","target","elements","value","number","addContact","reset","type","pattern","title","required","ContactItem","ContactInfo","ContactBtn","ContactList","useSelector","formatting","map","id","onClick","deleteContact","FilterLabel","Filter","onChange","filterContact","currentTarget","Spiner","height","width","ariaLabel","wrapperClass","borderColor","barColor","Box","Title","Text","Contacts"],"sourceRoot":""}